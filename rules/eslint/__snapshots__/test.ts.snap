// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint rules should be valid for JS 1`] = `
Object {
  "errorCount": 5,
  "failures": Array [
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 3,
        "position": 46,
      },
      "failure": "missing JSDoc parameter type for 'a'",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 0,
        "position": 0,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 3,
        "position": 46,
      },
      "failure": "missing JSDoc return type",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 0,
        "position": 0,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 3,
        "position": 46,
      },
      "failure": "missing JSDoc for parameter 'b'",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 0,
        "position": 0,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 3,
        "position": 46,
      },
      "failure": "JSDoc description does not satisfy the regex pattern",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 0,
        "position": 0,
      },
    },
    Object {
      "endPosition": Object {
        "character": 14,
        "line": 5,
        "position": 89,
      },
      "failure": "Operands of '+' operation must either be both strings or both numbers",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "restrict-plus-operands",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 9,
        "line": 5,
        "position": 84,
      },
    },
    Object {
      "endPosition": Object {
        "character": 27,
        "line": 4,
        "position": 74,
      },
      "failure": "Documentation must exist for exported functions.",
      "fix": undefined,
      "name": "./fixtures/eslint-js.js",
      "ruleName": "completed-docs",
      "ruleSeverity": "WARNING",
      "startPosition": Object {
        "character": 0,
        "line": 4,
        "position": 47,
      },
    },
  ],
  "fixes": Array [],
  "format": "prose",
  "output": "
ERROR: ./fixtures/eslint-js.js[1, 1]: missing JSDoc parameter type for 'a'
ERROR: ./fixtures/eslint-js.js[1, 1]: missing JSDoc return type
ERROR: ./fixtures/eslint-js.js[1, 1]: missing JSDoc for parameter 'b'
ERROR: ./fixtures/eslint-js.js[1, 1]: JSDoc description does not satisfy the regex pattern
WARNING: ./fixtures/eslint-js.js[5, 1]: Documentation must exist for exported functions.
ERROR: ./fixtures/eslint-js.js[6, 10]: Operands of '+' operation must either be both strings or both numbers
",
  "warningCount": 1,
}
`;

exports[`ESLint rules should be valid for TS 1`] = `
Object {
  "errorCount": 25,
  "failures": Array [
    Object {
      "endPosition": Object {
        "character": 25,
        "line": 49,
        "position": 702,
      },
      "failure": "Requires a space",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "block-spacing",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 14,
        "line": 49,
        "position": 691,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 51,
        "position": 720,
      },
      "failure": "Opening curly brace does not appear on the same line as controlling statement.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "brace-style",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 2,
        "line": 51,
        "position": 719,
      },
    },
    Object {
      "endPosition": Object {
        "character": 7,
        "line": 2,
        "position": 36,
      },
      "failure": "unexpected constant condition",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-constant-condition",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 3,
        "line": 2,
        "position": 32,
      },
    },
    Object {
      "endPosition": Object {
        "character": 24,
        "line": 8,
        "position": 117,
      },
      "failure": "unexpected control character in regular expression",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-control-regex",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 18,
        "line": 8,
        "position": 111,
      },
    },
    Object {
      "endPosition": Object {
        "character": 12,
        "line": 9,
        "position": 132,
      },
      "failure": "don't use empty classes in regular expressions",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-empty-character-class",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 8,
        "line": 9,
        "position": 128,
      },
    },
    Object {
      "endPosition": Object {
        "character": 15,
        "line": 19,
        "position": 223,
      },
      "failure": "do not assign to the exception parameter",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-ex-assign",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 2,
        "line": 19,
        "position": 210,
      },
    },
    Object {
      "endPosition": Object {
        "character": 10,
        "line": 20,
        "position": 234,
      },
      "failure": "redundant double negation in an if statement condition",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-extra-boolean-cast",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 6,
        "line": 20,
        "position": 230,
      },
    },
    Object {
      "endPosition": Object {
        "character": 5,
        "line": 29,
        "position": 425,
      },
      "failure": "move function declaration to program root",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-inner-declarations",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 4,
        "line": 23,
        "position": 270,
      },
    },
    Object {
      "endPosition": Object {
        "character": 14,
        "line": 37,
        "position": 532,
      },
      "failure": "Multiple spaces found before '==='.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-multi-spaces",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 11,
        "line": 37,
        "position": 529,
      },
    },
    Object {
      "endPosition": Object {
        "character": 25,
        "line": 24,
        "position": 312,
      },
      "failure": "spaces are hard to count - use {3}",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-regex-spaces",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 18,
        "line": 24,
        "position": 305,
      },
    },
    Object {
      "endPosition": Object {
        "character": 21,
        "line": 27,
        "position": 381,
      },
      "failure": "unexpected newline between function and ( of function call",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-unexpected-multiline",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 16,
        "line": 26,
        "position": 356,
      },
    },
    Object {
      "endPosition": Object {
        "character": 13,
        "line": 10,
        "position": 147,
      },
      "failure": "There should be no space after '{'",
      "fix": Object {
        "innerLength": 1,
        "innerStart": 147,
        "innerText": "",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "object-curly-spacing",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 12,
        "line": 10,
        "position": 146,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 10,
        "position": 137,
      },
      "failure": "There should be no space after '['.",
      "fix": Object {
        "innerLength": 1,
        "innerStart": 137,
        "innerText": "",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-computed-property-spacing",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 2,
        "line": 10,
        "position": 136,
      },
    },
    Object {
      "endPosition": Object {
        "character": 6,
        "line": 27,
        "position": 366,
      },
      "failure": "Unexpected newline between function name and paren.",
      "fix": Object {
        "innerLength": 7,
        "innerStart": 359,
        "innerText": "",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-func-call-spacing",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 19,
        "line": 26,
        "position": 359,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 41,
        "position": 582,
      },
      "failure": "Expected indentation of 4 spaces but found 3.",
      "fix": Object {
        "innerLength": 3,
        "innerStart": 579,
        "innerText": "    ",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-indent",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 41,
        "position": 579,
      },
    },
    Object {
      "endPosition": Object {
        "character": 2,
        "line": 42,
        "position": 589,
      },
      "failure": "Expected indentation of 5 spaces but found 2 tabs.",
      "fix": Object {
        "innerLength": 2,
        "innerStart": 587,
        "innerText": "     ",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-indent",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 42,
        "position": 587,
      },
    },
    Object {
      "endPosition": Object {
        "character": 1,
        "line": 42,
        "position": 588,
      },
      "failure": "Unexpected tab character.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-no-tabs",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 42,
        "position": 587,
      },
    },
    Object {
      "endPosition": Object {
        "character": 2,
        "line": 18,
        "position": 191,
      },
      "failure": "Block must not be padded by blank lines.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "ter-padded-blocks",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 9,
        "line": 16,
        "position": 186,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 35,
        "position": 473,
      },
      "failure": "missing JSDoc @returns for function",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 33,
        "position": 433,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 35,
        "position": 473,
      },
      "failure": "missing JSDoc for parameter 'b'",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 33,
        "position": 433,
      },
    },
    Object {
      "endPosition": Object {
        "character": 3,
        "line": 35,
        "position": 473,
      },
      "failure": "JSDoc description does not satisfy the regex pattern",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "valid-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 33,
        "position": 433,
      },
    },
    Object {
      "endPosition": Object {
        "character": 15,
        "line": 24,
        "position": 302,
      },
      "failure": "Shadowed name: 'tru'",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-shadowed-variable",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 12,
        "line": 24,
        "position": 299,
      },
    },
    Object {
      "endPosition": Object {
        "character": 22,
        "line": 25,
        "position": 335,
      },
      "failure": "Array has a missing element.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-sparse-arrays",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 21,
        "line": 25,
        "position": 334,
      },
    },
    Object {
      "endPosition": Object {
        "character": 2,
        "line": 42,
        "position": 589,
      },
      "failure": "2 space indentation expected",
      "fix": Object {
        "innerLength": 2,
        "innerStart": 587,
        "innerText": "    ",
      },
      "name": "./fixtures/eslint.ts",
      "ruleName": "indent",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 0,
        "line": 42,
        "position": 587,
      },
    },
    Object {
      "endPosition": Object {
        "character": 43,
        "line": 36,
        "position": 517,
      },
      "failure": "Documentation must exist for exported functions.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "completed-docs",
      "ruleSeverity": "WARNING",
      "startPosition": Object {
        "character": 0,
        "line": 36,
        "position": 474,
      },
    },
    Object {
      "endPosition": Object {
        "character": 18,
        "line": 34,
        "position": 455,
      },
      "failure": "Type annotation in JSDoc is redundant in TypeScript code.",
      "fix": undefined,
      "name": "./fixtures/eslint.ts",
      "ruleName": "no-redundant-jsdoc",
      "ruleSeverity": "ERROR",
      "startPosition": Object {
        "character": 10,
        "line": 34,
        "position": 447,
      },
    },
  ],
  "fixes": Array [],
  "format": "prose",
  "output": "
ERROR: ./fixtures/eslint.ts[3, 4]: unexpected constant condition
ERROR: ./fixtures/eslint.ts[9, 19]: unexpected control character in regular expression
ERROR: ./fixtures/eslint.ts[10, 9]: don't use empty classes in regular expressions
ERROR: ./fixtures/eslint.ts[11, 3]: There should be no space after '['.
ERROR: ./fixtures/eslint.ts[11, 13]: There should be no space after '{'
ERROR: ./fixtures/eslint.ts[17, 10]: Block must not be padded by blank lines.
ERROR: ./fixtures/eslint.ts[20, 3]: do not assign to the exception parameter
ERROR: ./fixtures/eslint.ts[21, 7]: redundant double negation in an if statement condition
ERROR: ./fixtures/eslint.ts[24, 5]: move function declaration to program root
ERROR: ./fixtures/eslint.ts[25, 13]: Shadowed name: 'tru'
ERROR: ./fixtures/eslint.ts[25, 19]: spaces are hard to count - use {3}
ERROR: ./fixtures/eslint.ts[26, 22]: Array has a missing element.
ERROR: ./fixtures/eslint.ts[27, 17]: unexpected newline between function and ( of function call
ERROR: ./fixtures/eslint.ts[27, 20]: Unexpected newline between function name and paren.
ERROR: ./fixtures/eslint.ts[34, 1]: JSDoc description does not satisfy the regex pattern
ERROR: ./fixtures/eslint.ts[34, 1]: missing JSDoc for parameter 'b'
ERROR: ./fixtures/eslint.ts[34, 1]: missing JSDoc @returns for function
ERROR: ./fixtures/eslint.ts[35, 11]: Type annotation in JSDoc is redundant in TypeScript code.
WARNING: ./fixtures/eslint.ts[37, 1]: Documentation must exist for exported functions.
ERROR: ./fixtures/eslint.ts[38, 12]: Multiple spaces found before '==='.
ERROR: ./fixtures/eslint.ts[42, 1]: Expected indentation of 4 spaces but found 3.
ERROR: ./fixtures/eslint.ts[43, 1]: Unexpected tab character.
ERROR: ./fixtures/eslint.ts[43, 1]: Expected indentation of 5 spaces but found 2 tabs.
ERROR: ./fixtures/eslint.ts[43, 1]: 2 space indentation expected
ERROR: ./fixtures/eslint.ts[50, 15]: Requires a space
ERROR: ./fixtures/eslint.ts[52, 3]: Opening curly brace does not appear on the same line as controlling statement.
",
  "warningCount": 1,
}
`;
